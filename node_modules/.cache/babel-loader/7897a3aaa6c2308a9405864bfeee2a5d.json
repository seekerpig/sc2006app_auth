{"ast":null,"code":"import _asyncToGenerator from \"/Users/chuayannaroj/Documents/SC2006 Projects/sc2006app_auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getFirestore, collection, getDocs, doc, getDoc, setDoc, addDoc, updateDoc } from \"firebase/firestore\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\"; //import { isFunctionDeclaration } from \"typescript\";\n\nimport { JoinGame } from \"./JoinGameController\"; // Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// the firebaseConfig is only stored here for reference purpose\n// during production, it will be stored into a env file\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAtIYhQTwSkF8ZL75Vrd18lRLHsVsPx57E\",\n  authDomain: \"sc2006app.firebaseapp.com\",\n  projectId: \"sc2006app\",\n  storageBucket: \"sc2006app.appspot.com\",\n  messagingSenderId: \"258220254585\",\n  appId: \"1:258220254585:web:8648b75b7750f54ebbfba8\",\n  measurementId: \"G-Y97WP5YR5N\"\n}; // Initialize Firebase\n\nvar app = initializeApp(firebaseConfig); // Intialize Firestore\n\nvar db = getFirestore();\nvar auth = getAuth(app);\nexport { db, auth }; // export const getCollection = () => {\n//   const [games, setGames] = useState(null);\n//   useEffect(() => {\n//     let ref = collection(db, \"Games\");\n//     getDocs(ref).then((snapshot) => {\n//       let results = [];\n//       snapshot.docs.forEach((doc) => {\n//         let id = {\n//           gameId: doc.id,\n//         }\n//         let data = Object.assign(id, doc.data());\n//         results.push(\n//           data\n//         );\n//       });\n//       setGames(results);\n//     });\n//     // return () => unsub();\n//   }, []);\n//   return { games };\n// }\n\nexport var login = function login(email, password) {\n  console.log('trying to login');\n  return signInWithEmailAndPassword(auth, email, password);\n};\nexport var signUp = function signUp(email, password, name, phoneNo, description, profileImg) {\n  console.log('hello sign up');\n  var storage = getStorage();\n\n  try {\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      // Signed in \n      var user = userCredential.user;\n      var storageRef = ref(storage, 'images/' + user.uid);\n      console.log(user.uid);\n      var uploadTask = uploadBytesResumable(storageRef, profileImg); // Register three observers:\n      // 1. 'state_changed' observer, called any time the state changes\n      // 2. Error observer, called on failure\n      // 3. Completion observer, called on successful completion\n\n      uploadTask.on('state_changed', function (snapshot) {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n\n          case 'running':\n            console.log('Upload is running');\n            break;\n\n          default:\n            console.log(\"Do something\");\n            break;\n        }\n      }, function (error) {\n        // Handle unsuccessful uploads\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n\n          default:\n            console.log(\"Do something\");\n            break;\n        }\n      }, function () {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n          setDoc(doc(db, \"Users\", user.uid), {\n            name: name,\n            email: email,\n            phoneNo: phoneNo,\n            description: description,\n            profileUrl: downloadURL,\n            gameList: []\n          });\n        });\n      }); // ...\n    }).catch(function (error) {\n      //const errorCode = error.code;\n      console.log(error.code); //const errorMessage = error.message;\n      // ..\n    });\n  } catch (error) {\n    console.log(\"Error in Sign up\");\n    console.log(error);\n  } //return signInWithEmailAndPassword(auth, email, password);\n  //NEED CODE HERE TO DEAL W CREATING ENTITY in db with name, phone no etc.. and profile img\n\n};\nexport var getFacilities = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var ref;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //console.log(\"Get a Game\");\n            ref = collection(db, \"Facilities\");\n            _context.next = 3;\n            return getDocs(ref);\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getFacilities() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var insertFacilities = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(facilities) {\n    var currentFacilities, flag;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getDocs(collection(db, \"Facilities\"));\n\n          case 2:\n            currentFacilities = _context2.sent;\n            flag = 0;\n            currentFacilities.docs.forEach(function (doc) {\n              if (facilities.id === doc.data().placemarkid) {\n                console.log(\"something matched\");\n                flag = 1;\n              }\n            });\n\n            if (!(flag === 0)) {\n              _context2.next = 9;\n              break;\n            }\n\n            console.log(\"Adding\");\n            _context2.next = 9;\n            return addDoc(collection(db, \"Facilities\"), {\n              placemarkid: facilities.id,\n              name: facilities.name,\n              coordinates: facilities.coordinates\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function insertFacilities(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getGames = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var ref;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            ref = collection(db, \"Games\");\n            _context3.next = 3;\n            return getDocs(ref);\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getGames() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getAGame = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(gameId) {\n    var ref;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(\"Get a Game\");\n            ref = doc(db, \"Games\", gameId);\n            _context4.next = 4;\n            return getDoc(ref);\n\n          case 4:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getAGame(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var retrieveAUser = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(userId) {\n    var ref;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            //console.log(\"Get a Game\");\n            ref = doc(db, \"Users\", userId);\n            _context5.next = 3;\n            return getDoc(ref);\n\n          case 3:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function retrieveAUser(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var createAGame = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(title, location, sportType, startDate, endDate, description, maxPlayers, creator) {\n    var activeUser;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return getDoc(doc(db, \"Users\", creator));\n\n          case 2:\n            activeUser = _context6.sent;\n            console.log(activeUser.data().uid); //console.log(activeUser.data().gameList);\n\n            _context6.next = 6;\n            return addDoc(collection(db, \"Games\"), {\n              currentPlayers: 0,\n              description: description,\n              startTime: new Date(startDate),\n              endTime: new Date(endDate),\n              location: location,\n              sportType: sportType,\n              title: title,\n              maxPlayers: maxPlayers,\n              userList: []\n            }).then(function (docRef) {\n              console.log(docRef.id);\n              console.log(creator);\n              JoinGame(docRef.id, creator);\n            });\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function createAGame(_x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var joinAGame = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(gameId, userId) {\n    var game, gameListArray, user, userListArray, player;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return getDoc(doc(db, \"Games\", gameId));\n\n          case 2:\n            game = _context7.sent;\n            gameListArray = Object.values(game.data().userList);\n\n            if (!gameListArray.includes(userId)) {\n              _context7.next = 9;\n              break;\n            }\n\n            console.log(\"Duplicate games\");\n            return _context7.abrupt(\"return\", 200);\n\n          case 9:\n            gameListArray.push(userId);\n            _context7.next = 12;\n            return getDoc(doc(db, \"Users\", userId));\n\n          case 12:\n            user = _context7.sent;\n            userListArray = Object.values(user.data().gameList);\n            userListArray.push(gameId);\n            player = game.data().currentPlayers + 1; //player = player +1;\n            //console.log(player);\n\n            console.log(\"Player count = \");\n            console.log(user.data());\n            console.log(\"Player below\");\n            console.log(player);\n            console.log(\"Game is here\");\n            console.log(game.data());\n            updateDoc(doc(db, \"Games\", gameId), {\n              currentPlayers: player,\n              userList: gameListArray\n            });\n            updateDoc(doc(db, \"Users\", userId), {\n              gameList: userListArray\n            });\n            return _context7.abrupt(\"return\", 100);\n\n          case 25:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function joinAGame(_x12, _x13) {\n    return _ref7.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","collection","getDocs","doc","getDoc","setDoc","addDoc","updateDoc","getStorage","ref","uploadBytesResumable","getDownloadURL","JoinGame","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","auth","login","email","password","console","log","signUp","name","phoneNo","description","profileImg","storage","then","userCredential","user","storageRef","uid","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","error","code","downloadURL","profileUrl","gameList","catch","getFacilities","insertFacilities","facilities","currentFacilities","flag","docs","forEach","id","data","placemarkid","coordinates","getGames","getAGame","gameId","retrieveAUser","userId","createAGame","title","location","sportType","startDate","endDate","maxPlayers","creator","activeUser","currentPlayers","startTime","Date","endTime","userList","docRef","joinAGame","game","gameListArray","Object","values","includes","push","userListArray","player"],"sources":["/Users/chuayannaroj/Documents/SC2006 Projects/sc2006app_auth/src/Control/DatabaseController.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\n\nimport { getAuth,createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getFirestore, collection, getDocs, doc, getDoc,setDoc,addDoc,updateDoc } from \"firebase/firestore\";\n\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n//import { isFunctionDeclaration } from \"typescript\";\n\nimport {JoinGame} from \"./JoinGameController\";\n\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// the firebaseConfig is only stored here for reference purpose\n// during production, it will be stored into a env file\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAtIYhQTwSkF8ZL75Vrd18lRLHsVsPx57E\",\n  authDomain: \"sc2006app.firebaseapp.com\",\n  projectId: \"sc2006app\",\n  storageBucket: \"sc2006app.appspot.com\",\n  messagingSenderId: \"258220254585\",\n  appId: \"1:258220254585:web:8648b75b7750f54ebbfba8\",\n  measurementId: \"G-Y97WP5YR5N\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n// Intialize Firestore\nconst db = getFirestore();\nconst auth = getAuth(app);\n\nexport { db, auth }\n\n// export const getCollection = () => {\n\n//   const [games, setGames] = useState(null);\n\n//   useEffect(() => {\n//     let ref = collection(db, \"Games\");\n//     getDocs(ref).then((snapshot) => {\n//       let results = [];\n//       snapshot.docs.forEach((doc) => {\n//         let id = {\n//           gameId: doc.id,\n//         }\n//         let data = Object.assign(id, doc.data());\n//         results.push(\n//           data\n//         );\n//       });\n//       setGames(results);\n//     });\n//     // return () => unsub();\n//   }, []);\n\n//   return { games };\n// }\n\n\nexport const login = (email, password) => {\n  console.log('trying to login');\n  return signInWithEmailAndPassword(auth, email, password);\n}\n\nexport const signUp = (email, password, name, phoneNo, description, profileImg) => {\n  console.log('hello sign up');\n  const storage = getStorage();\n  \n  try{\n  createUserWithEmailAndPassword(auth, email, password)\n  .then((userCredential) => {\n    // Signed in \n    const user = userCredential.user;\n    const storageRef = ref(storage, 'images/' + user.uid);\n    console.log(user.uid);\n    const uploadTask = uploadBytesResumable(storageRef, profileImg);\n  \n  // Register three observers:\n  // 1. 'state_changed' observer, called any time the state changes\n  // 2. Error observer, called on failure\n  // 3. Completion observer, called on successful completion\n  uploadTask.on('state_changed', \n    (snapshot) => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      console.log('Upload is ' + progress + '% done');\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n        case 'running':\n          console.log('Upload is running');\n          break;\n        default:\n          console.log(\"Do something\");\n          break;\n      }\n    }, \n    (error) => {\n      // Handle unsuccessful uploads\n      switch (error.code) {\n        case 'storage/unauthorized':\n          // User doesn't have permission to access the object\n          break;\n        case 'storage/canceled':\n          // User canceled the upload\n          break;\n        case 'storage/unknown':\n          // Unknown error occurred, inspect error.serverResponse\n          break;\n        default:\n          console.log(\"Do something\");\n          break;\n      }\n    }, \n    () => {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n        setDoc(doc(db,\"Users\",user.uid),{\n          name: name,\n          email:email,\n          phoneNo:phoneNo,\n          description:description,\n          profileUrl:downloadURL,\n          gameList: []\n  \n  \n        });\n      });\n    }\n  );\n    // ...\n  })\n  .catch((error) => {\n    //const errorCode = error.code;\n    console.log(error.code);\n    //const errorMessage = error.message;\n    // ..\n  });\n}\ncatch(error) {\n  console.log(\"Error in Sign up\");\n\n  console.log(error);\n}\n\n  \n  \n  \n  //return signInWithEmailAndPassword(auth, email, password);\n  \n\n  //NEED CODE HERE TO DEAL W CREATING ENTITY in db with name, phone no etc.. and profile img\n}\nexport const getFacilities = async() => {\n  //console.log(\"Get a Game\");\n  let ref = collection(db, \"Facilities\");\n  return await getDocs(ref);\n\n}\nexport const insertFacilities = async (facilities) => {\n  const currentFacilities = await getDocs(collection(db,\"Facilities\"));\n  var flag = 0\n  currentFacilities.docs.forEach((doc) => {\n    if(facilities.id === doc.data().placemarkid){\n      console.log(\"something matched\");\n      flag = 1;\n    }\n  })\n  if(flag === 0){\n    console.log(\"Adding\")\n  await addDoc(collection(db,\"Facilities\"),{\n    placemarkid:facilities.id,\n    name:facilities.name,\n    coordinates:facilities.coordinates\n  })\n  }\n  //console.log(currentFacilities);\n\n}\n\nexport const getGames = async () => {\n\n  let ref = collection(db, \"Games\");\n  return await getDocs(ref);\n  \n}\n\nexport const getAGame = async (gameId) => {\n  console.log(\"Get a Game\");\n  const ref = doc(db, \"Games\", gameId);\n  return await getDoc(ref);\n  \n}\n\nexport const retrieveAUser = async  (userId) => {\n  //console.log(\"Get a Game\");\n  const ref = doc(db, \"Users\", userId);\n  return await getDoc(ref);\n  \n}\n\nexport const createAGame = async (title, location, sportType, startDate, endDate, description, maxPlayers,creator) => {\n  //const gameDocRef = doc(db, \"Games\");\n  const activeUser = await getDoc(doc(db,\"Users\",creator));\n  console.log(activeUser.data().uid);\n\n  //console.log(activeUser.data().gameList);\n\n  await addDoc(collection(db, \"Games\"), {\n    currentPlayers: 0,\n    description: description,\n    startTime: new Date(startDate),\n    endTime: new Date(endDate),\n    location: location,\n    sportType: sportType,\n    title: title,\n    maxPlayers: maxPlayers,\n    userList: []\n  }).then(docRef => {\n    console.log(docRef.id);\n    console.log(creator);\n    JoinGame(docRef.id,creator);\n  })\n  }\n\n  export const joinAGame = async(gameId,userId)=>{\n    const game = await getDoc(doc(db,\"Games\",gameId));\n \n    const gameListArray = Object.values(game.data().userList);\n    if (gameListArray.includes(userId)){\n      \n      console.log(\"Duplicate games\");\n      return 200;\n      \n      \n      \n    }\n    else{\n    \n    gameListArray.push(userId);\n\n    const user = await getDoc(doc(db,\"Users\",userId));\n    const userListArray = Object.values(user.data().gameList);\n    \n    userListArray.push(gameId);\n    const player = game.data().currentPlayers+1;\n    //player = player +1;\n    //console.log(player);\n    console.log(\"Player count = \");\n    console.log(user.data());\n    console.log(\"Player below\");\n    console.log(player);\n    console.log(\"Game is here\");\n    console.log(game.data());\n    updateDoc(doc(db,\"Games\",gameId),{\n        currentPlayers: player,\n        userList: gameListArray\n    })\n    updateDoc(doc(db,\"Users\",userId),{\n      gameList:userListArray\n    })\n    return 100;\n  }\n\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}